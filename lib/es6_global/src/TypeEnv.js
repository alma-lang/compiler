// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Type from "./Type.js";
import * as Belt_MapString from "../../../node_modules/rescript/lib/es6/belt_MapString.js";

function empty(param) {
  return Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(Belt_MapString.set(undefined, "(or)", {
                                                  TAG: 2,
                                                  _0: Type.bool_,
                                                  _1: {
                                                    TAG: 2,
                                                    _0: Type.bool_,
                                                    _1: Type.bool_,
                                                    [Symbol.for("name")]: "Fn"
                                                  },
                                                  [Symbol.for("name")]: "Fn"
                                                }), "(and)", {
                                              TAG: 2,
                                              _0: Type.bool_,
                                              _1: {
                                                TAG: 2,
                                                _0: Type.bool_,
                                                _1: Type.bool_,
                                                [Symbol.for("name")]: "Fn"
                                              },
                                              [Symbol.for("name")]: "Fn"
                                            }), "(>)", {
                                          TAG: 2,
                                          _0: Type.number,
                                          _1: {
                                            TAG: 2,
                                            _0: Type.number,
                                            _1: Type.bool_,
                                            [Symbol.for("name")]: "Fn"
                                          },
                                          [Symbol.for("name")]: "Fn"
                                        }), "(>=)", {
                                      TAG: 2,
                                      _0: Type.number,
                                      _1: {
                                        TAG: 2,
                                        _0: Type.number,
                                        _1: Type.bool_,
                                        [Symbol.for("name")]: "Fn"
                                      },
                                      [Symbol.for("name")]: "Fn"
                                    }), "(<)", {
                                  TAG: 2,
                                  _0: Type.number,
                                  _1: {
                                    TAG: 2,
                                    _0: Type.number,
                                    _1: Type.bool_,
                                    [Symbol.for("name")]: "Fn"
                                  },
                                  [Symbol.for("name")]: "Fn"
                                }), "(<=)", {
                              TAG: 2,
                              _0: Type.number,
                              _1: {
                                TAG: 2,
                                _0: Type.number,
                                _1: Type.bool_,
                                [Symbol.for("name")]: "Fn"
                              },
                              [Symbol.for("name")]: "Fn"
                            }), "(+)", {
                          TAG: 2,
                          _0: Type.number,
                          _1: {
                            TAG: 2,
                            _0: Type.number,
                            _1: Type.number,
                            [Symbol.for("name")]: "Fn"
                          },
                          [Symbol.for("name")]: "Fn"
                        }), "(-)", {
                      TAG: 2,
                      _0: Type.number,
                      _1: {
                        TAG: 2,
                        _0: Type.number,
                        _1: Type.number,
                        [Symbol.for("name")]: "Fn"
                      },
                      [Symbol.for("name")]: "Fn"
                    }), "(*)", {
                  TAG: 2,
                  _0: Type.number,
                  _1: {
                    TAG: 2,
                    _0: Type.number,
                    _1: Type.number,
                    [Symbol.for("name")]: "Fn"
                  },
                  [Symbol.for("name")]: "Fn"
                }), "(/)", {
              TAG: 2,
              _0: Type.number,
              _1: {
                TAG: 2,
                _0: Type.number,
                _1: Type.number,
                [Symbol.for("name")]: "Fn"
              },
              [Symbol.for("name")]: "Fn"
            });
}

var getExn = Belt_MapString.getExn;

export {
  empty ,
  getExn ,
  
}
/* No side effect */
