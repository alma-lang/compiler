---
source: src/parser.rs
assertion_line: 2907
expression: "parse(\"\nmodule Test\n\ntype Fruit = { name : String , banana: Phone }\n\")"
---
Input:


module Test

type Fruit = { name : String , banana: Phone }


Result:

(
    Module {
        name: ModuleName {
            parts: [
                CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 1,
                    },
                    span: Index(
                        0,
                    ),
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [],
        imports: [],
        definitions: [],
        type_definitions: [
            TypeDefinition {
                span: Index(
                    9,
                ),
                name: CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 2,
                    },
                    span: Index(
                        1,
                    ),
                },
                vars: [],
                typ: Record(
                    Record(
                        Record {
                            span: Index(
                                8,
                            ),
                            fields: [
                                (
                                    Identifier {
                                        name: SymbolU32 {
                                            value: 3,
                                        },
                                        span: Index(
                                            2,
                                        ),
                                    },
                                    App(
                                        Constructor {
                                            span: Index(
                                                4,
                                            ),
                                            name: CapitalizedIdentifier {
                                                name: SymbolU32 {
                                                    value: 4,
                                                },
                                                span: Index(
                                                    3,
                                                ),
                                            },
                                            params: [],
                                        },
                                    ),
                                ),
                                (
                                    Identifier {
                                        name: SymbolU32 {
                                            value: 5,
                                        },
                                        span: Index(
                                            5,
                                        ),
                                    },
                                    App(
                                        Constructor {
                                            span: Index(
                                                7,
                                            ),
                                            name: CapitalizedIdentifier {
                                                name: SymbolU32 {
                                                    value: 6,
                                                },
                                                span: Index(
                                                    6,
                                                ),
                                            },
                                            params: [],
                                        },
                                    ),
                                ),
                            ],
                        },
                    ),
                ),
            },
        ],
    },
    [],
)

{}

{
    Index(
        0,
    ): Span {
        start: Index(
            1,
        ),
        end: Index(
            1,
        ),
    },
    Index(
        1,
    ): Span {
        start: Index(
            3,
        ),
        end: Index(
            3,
        ),
    },
    Index(
        2,
    ): Span {
        start: Index(
            6,
        ),
        end: Index(
            6,
        ),
    },
    Index(
        3,
    ): Span {
        start: Index(
            8,
        ),
        end: Index(
            8,
        ),
    },
    Index(
        4,
    ): Span {
        start: Index(
            8,
        ),
        end: Index(
            8,
        ),
    },
    Index(
        5,
    ): Span {
        start: Index(
            10,
        ),
        end: Index(
            10,
        ),
    },
    Index(
        6,
    ): Span {
        start: Index(
            12,
        ),
        end: Index(
            12,
        ),
    },
    Index(
        7,
    ): Span {
        start: Index(
            12,
        ),
        end: Index(
            12,
        ),
    },
    Index(
        8,
    ): Span {
        start: Index(
            5,
        ),
        end: Index(
            13,
        ),
    },
    Index(
        9,
    ): Span {
        start: Index(
            2,
        ),
        end: Index(
            13,
        ),
    },
}
