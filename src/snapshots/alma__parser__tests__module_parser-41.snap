---
source: src/parser.rs
expression: "parse(\"\nmodule Test\n\ntype Fruit = {\n\")"

---
Input:


module Test

type Fruit = {


Result:

5:0: Expected a record literal `{ x : Int, y : Int }`or an extensible record `{ a | x : Int, y : Int }`, but instead found: `[End of file]`

  3│  module Test
  4│  
  5│  type Fruit = {
   │                ↑

Error {
    message: "5:0: Expected a record literal `{ x : Int, y : Int }`or an extensible record `{ a | x : Int, y : Int }`, but instead found: `[End of file]`\n\n  3│  module Test\n  4│  \n  5│  type Fruit = {\n   │                ↑",
    token: Token {
        kind: Eof,
        position: 29,
        end_position: 29,
        lexeme: "[End of file]",
        line: 5,
        column: 0,
        indent: 0,
    },
}
