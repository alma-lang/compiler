---
source: src/infer.rs
assertion_line: 2529
expression: "infer(\"\\\nmodule User exposing (new)\n\nimport User.Id\n\nnew = { id = User.Id.new }\n\nmodule User.Id exposing (new)\n    new = 42\n\")"
---
Input:

module User exposing (new)

import User.Id

new = { id = User.Id.new }

module User.Id exposing (new)
    new = 42


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module User

new : ∀ ∅ . { id : Float }


module User.Id

new : ∀ ∅ . Float
