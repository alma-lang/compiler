---
source: src/infer.rs
assertion_line: 2529
expression: "infer(r#\"\nmodule Test\n\nimport Test.TestInner exposing (test)\n\nadd = \\x -> x + test\n\nmodule Test.TestInner exposing (test)\n\n    test = 5\n\"#)"
---
Input:


module Test

import Test.TestInner exposing (test)

add = \x -> x + test

module Test.TestInner exposing (test)

    test = 5


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test




module Test.TestInner

test : ∀ ∅ . Float
