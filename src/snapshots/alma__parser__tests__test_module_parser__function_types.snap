---
source: src/parser.rs
assertion_line: 2966
expression: "parse(\"\\\nmodule Test exposing (Fruit)\n\ntype Fruit a b = Fruit (a -> b)\n\")"
---
Input:

module Test exposing (Fruit)

type Fruit a b = Fruit (a -> b)


Result:

(
    Module {
        name: ModuleName {
            parts: [
                Node {
                    start: Idx(
                        1,
                    ),
                    end: Idx(
                        1,
                    ),
                    value: CapitalizedIdentifier_ {
                        name: SymbolU32 {
                            value: 1,
                        },
                    },
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [
            Node {
                start: Idx(
                    4,
                ),
                end: Idx(
                    4,
                ),
                value: Type(
                    Node {
                        start: Idx(
                            4,
                        ),
                        end: Idx(
                            4,
                        ),
                        value: CapitalizedIdentifier_ {
                            name: SymbolU32 {
                                value: 2,
                            },
                        },
                    },
                    [],
                ),
            },
        ],
        imports: [],
        definitions: [],
        type_definitions: [
            Node {
                start: Idx(
                    6,
                ),
                end: Idx(
                    16,
                ),
                value: TypeDefinition_ {
                    name: Node {
                        start: Idx(
                            7,
                        ),
                        end: Idx(
                            7,
                        ),
                        value: CapitalizedIdentifier_ {
                            name: SymbolU32 {
                                value: 2,
                            },
                        },
                    },
                    vars: [
                        Node {
                            start: Idx(
                                8,
                            ),
                            end: Idx(
                                8,
                            ),
                            value: Identifier_ {
                                name: SymbolU32 {
                                    value: 3,
                                },
                            },
                        },
                        Node {
                            start: Idx(
                                9,
                            ),
                            end: Idx(
                                9,
                            ),
                            value: Identifier_ {
                                name: SymbolU32 {
                                    value: 4,
                                },
                            },
                        },
                    ],
                    typ: Union(
                        [
                            Node {
                                start: Idx(
                                    11,
                                ),
                                end: Idx(
                                    16,
                                ),
                                value: Constructor_ {
                                    name: Node {
                                        start: Idx(
                                            11,
                                        ),
                                        end: Idx(
                                            11,
                                        ),
                                        value: CapitalizedIdentifier_ {
                                            name: SymbolU32 {
                                                value: 2,
                                            },
                                        },
                                    },
                                    params: [
                                        Fun(
                                            [
                                                Var(
                                                    Node {
                                                        start: Idx(
                                                            13,
                                                        ),
                                                        end: Idx(
                                                            13,
                                                        ),
                                                        value: Identifier_ {
                                                            name: SymbolU32 {
                                                                value: 3,
                                                            },
                                                        },
                                                    },
                                                ),
                                            ],
                                            Var(
                                                Node {
                                                    start: Idx(
                                                        15,
                                                    ),
                                                    end: Idx(
                                                        15,
                                                    ),
                                                    value: Identifier_ {
                                                        name: SymbolU32 {
                                                            value: 4,
                                                        },
                                                    },
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            },
                        ],
                    ),
                },
            },
        ],
    },
    [],
)
