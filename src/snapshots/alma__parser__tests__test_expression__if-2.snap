---
source: src/parser.rs
assertion_line: 2262
expression: "parse(\"\nif True then\n  1\n\nelse\n  2\")"
---
Input:


if True then
  1

else
  2

Result:

Node {
    start: Index(
        0,
    ),
    end: Index(
        5,
    ),
    value: Expression_ {
        typ: RefCell {
            value: None,
        },
        expr: If {
            condition: Node {
                start: Index(
                    1,
                ),
                end: Index(
                    1,
                ),
                value: Expression_ {
                    typ: RefCell {
                        value: None,
                    },
                    expr: Bool(
                        true,
                    ),
                },
            },
            then: Node {
                start: Index(
                    3,
                ),
                end: Index(
                    3,
                ),
                value: Expression_ {
                    typ: RefCell {
                        value: None,
                    },
                    expr: Float(
                        1.0,
                    ),
                },
            },
            else_: Node {
                start: Index(
                    5,
                ),
                end: Index(
                    5,
                ),
                value: Expression_ {
                    typ: RefCell {
                        value: None,
                    },
                    expr: Float(
                        2.0,
                    ),
                },
            },
        },
    },
}
