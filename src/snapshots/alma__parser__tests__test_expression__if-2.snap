---
source: src/parser.rs
assertion_line: 2295
expression: "parse(\"\nif True then\n  1\n\nelse\n  2\")"
---
Input:


if True then
  1

else
  2

Result:

Index(
    3,
)

{
    Index(
        0,
    ): Expression {
        span: Index(
            0,
        ),
        typ: RefCell {
            value: None,
        },
        expr: Bool(
            true,
        ),
    },
    Index(
        1,
    ): Expression {
        span: Index(
            1,
        ),
        typ: RefCell {
            value: None,
        },
        expr: Float(
            1.0,
        ),
    },
    Index(
        2,
    ): Expression {
        span: Index(
            2,
        ),
        typ: RefCell {
            value: None,
        },
        expr: Float(
            2.0,
        ),
    },
    Index(
        3,
    ): Expression {
        span: Index(
            3,
        ),
        typ: RefCell {
            value: None,
        },
        expr: If {
            condition: Index(
                0,
            ),
            then: Index(
                1,
            ),
            else_: Index(
                2,
            ),
        },
    },
}

{
    Index(
        0,
    ): Span {
        start: Index(
            1,
        ),
        end: Index(
            1,
        ),
    },
    Index(
        1,
    ): Span {
        start: Index(
            3,
        ),
        end: Index(
            3,
        ),
    },
    Index(
        2,
    ): Span {
        start: Index(
            5,
        ),
        end: Index(
            5,
        ),
    },
    Index(
        3,
    ): Span {
        start: Index(
            0,
        ),
        end: Index(
            5,
        ),
    },
}
