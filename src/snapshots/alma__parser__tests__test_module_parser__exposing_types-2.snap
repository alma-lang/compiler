---
source: src/parser.rs
assertion_line: 2918
expression: "parse(\"\\\nmodule Test exposing (main)\n\nimport Test.Fruits exposing (Fruit(Banana))\n\nmain = 1\n\nmodule Test.Fruits exposing (Fruit(Banana))\n    type Fruit = Banana\n\")"
---
Input:

module Test exposing (main)

import Test.Fruits exposing (Fruit(Banana))

main = 1

module Test.Fruits exposing (Fruit(Banana))
    type Fruit = Banana


Result:

(
    Module {
        name: ModuleName {
            parts: [
                Node {
                    start: 1,
                    end: 1,
                    value: CapitalizedIdentifier_ {
                        name: SymbolU32 {
                            value: 1,
                        },
                    },
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [
            Node {
                start: 4,
                end: 4,
                value: Identifier(
                    Node {
                        start: 4,
                        end: 4,
                        value: Identifier_ {
                            name: SymbolU32 {
                                value: 2,
                            },
                        },
                    },
                ),
            },
        ],
        imports: [
            Node {
                start: 6,
                end: 16,
                value: Import_ {
                    module_name: ModuleName {
                        parts: [
                            Node {
                                start: 7,
                                end: 7,
                                value: CapitalizedIdentifier_ {
                                    name: SymbolU32 {
                                        value: 1,
                                    },
                                },
                            },
                            Node {
                                start: 9,
                                end: 9,
                                value: CapitalizedIdentifier_ {
                                    name: SymbolU32 {
                                        value: 3,
                                    },
                                },
                            },
                        ],
                        full_name: SymbolU32 {
                            value: 7,
                        },
                    },
                    alias: None,
                    exposing: [
                        Node {
                            start: 12,
                            end: 15,
                            value: Type(
                                Node {
                                    start: 12,
                                    end: 12,
                                    value: CapitalizedIdentifier_ {
                                        name: SymbolU32 {
                                            value: 4,
                                        },
                                    },
                                },
                                [
                                    Node {
                                        start: 14,
                                        end: 14,
                                        value: CapitalizedIdentifier_ {
                                            name: SymbolU32 {
                                                value: 5,
                                            },
                                        },
                                    },
                                ],
                            ),
                        },
                    ],
                },
            },
        ],
        definitions: [
            Untyped(
                Pattern(
                    Node {
                        start: 17,
                        end: 17,
                        value: Identifier(
                            Node {
                                start: 17,
                                end: 17,
                                value: Identifier_ {
                                    name: SymbolU32 {
                                        value: 2,
                                    },
                                },
                            },
                        ),
                    },
                    Node {
                        start: 19,
                        end: 19,
                        value: Expression_ {
                            typ: RefCell {
                                value: None,
                            },
                            expr: Float(
                                1.0,
                            ),
                        },
                    },
                ),
            ),
        ],
        type_definitions: [],
    },
    [
        Module {
            name: ModuleName {
                parts: [
                    Node {
                        start: 21,
                        end: 21,
                        value: CapitalizedIdentifier_ {
                            name: SymbolU32 {
                                value: 1,
                            },
                        },
                    },
                    Node {
                        start: 23,
                        end: 23,
                        value: CapitalizedIdentifier_ {
                            name: SymbolU32 {
                                value: 3,
                            },
                        },
                    },
                ],
                full_name: SymbolU32 {
                    value: 7,
                },
            },
            exports: [
                Node {
                    start: 26,
                    end: 29,
                    value: Type(
                        Node {
                            start: 26,
                            end: 26,
                            value: CapitalizedIdentifier_ {
                                name: SymbolU32 {
                                    value: 4,
                                },
                            },
                        },
                        [
                            Node {
                                start: 28,
                                end: 28,
                                value: CapitalizedIdentifier_ {
                                    name: SymbolU32 {
                                        value: 5,
                                    },
                                },
                            },
                        ],
                    ),
                },
            ],
            imports: [],
            definitions: [],
            type_definitions: [
                Node {
                    start: 31,
                    end: 34,
                    value: TypeDefinition_ {
                        name: Node {
                            start: 32,
                            end: 32,
                            value: CapitalizedIdentifier_ {
                                name: SymbolU32 {
                                    value: 4,
                                },
                            },
                        },
                        vars: [],
                        typ: Union(
                            [
                                Node {
                                    start: 34,
                                    end: 34,
                                    value: Constructor_ {
                                        name: Node {
                                            start: 34,
                                            end: 34,
                                            value: CapitalizedIdentifier_ {
                                                name: SymbolU32 {
                                                    value: 5,
                                                },
                                            },
                                        },
                                        params: [],
                                    },
                                },
                            ],
                        ),
                    },
                },
            ],
        },
    ],
)
