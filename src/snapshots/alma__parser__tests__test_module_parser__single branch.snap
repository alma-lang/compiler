---
source: src/parser.rs
assertion_line: 2779
expression: "parse(\"\nmodule Test\n\ntype Fruit = Banana\n\")"
---
Input:


module Test

type Fruit = Banana


Result:

(
    Module {
        name: ModuleName {
            parts: [
                CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 1,
                    },
                    span: Index(
                        0,
                    ),
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [],
        imports: [],
        definitions: [],
        type_definitions: [
            TypeDefinition {
                span: Index(
                    4,
                ),
                name: CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 2,
                    },
                    span: Index(
                        1,
                    ),
                },
                vars: [],
                typ: Union {
                    constructors: [
                        Constructor {
                            span: Index(
                                3,
                            ),
                            name: CapitalizedIdentifier {
                                name: SymbolU32 {
                                    value: 3,
                                },
                                span: Index(
                                    2,
                                ),
                            },
                            params: [],
                        },
                    ],
                },
            },
        ],
    },
    [],
)

{}

{
    Index(
        0,
    ): Span {
        start: Index(
            1,
        ),
        end: Index(
            1,
        ),
    },
    Index(
        1,
    ): Span {
        start: Index(
            3,
        ),
        end: Index(
            3,
        ),
    },
    Index(
        2,
    ): Span {
        start: Index(
            5,
        ),
        end: Index(
            5,
        ),
    },
    Index(
        3,
    ): Span {
        start: Index(
            5,
        ),
        end: Index(
            5,
        ),
    },
    Index(
        4,
    ): Span {
        start: Index(
            2,
        ),
        end: Index(
            5,
        ),
    },
}
