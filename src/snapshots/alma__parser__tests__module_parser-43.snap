---
source: src/parser.rs
expression: "parse(\"\nmodule Test\n\ntype Fruit = { name : String }\n\")"

---
Input:


module Test

type Fruit = { name : String }


Result:

(
    Module {
        name: ModuleName {
            parts: [
                Node {
                    start: 8,
                    end: 12,
                    line: 2,
                    column: 7,
                    value: CapitalizedIdentifier_ {
                        name: SymbolU32 {
                            value: 1,
                        },
                    },
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [],
        imports: [],
        definitions: [],
        type_definitions: [
            Node {
                start: 14,
                end: 44,
                line: 4,
                column: 0,
                value: TypeDefinition_ {
                    name: Node {
                        start: 19,
                        end: 24,
                        line: 4,
                        column: 5,
                        value: CapitalizedIdentifier_ {
                            name: SymbolU32 {
                                value: 2,
                            },
                        },
                    },
                    vars: [],
                    typ: Record(
                        Record(
                            Node {
                                start: 27,
                                end: 44,
                                line: 4,
                                column: 13,
                                value: Record_ {
                                    fields: [
                                        (
                                            Node {
                                                start: 29,
                                                end: 33,
                                                line: 4,
                                                column: 15,
                                                value: Identifier_ {
                                                    name: SymbolU32 {
                                                        value: 3,
                                                    },
                                                },
                                            },
                                            TypeApp(
                                                Node {
                                                    start: 36,
                                                    end: 42,
                                                    line: 4,
                                                    column: 22,
                                                    value: Constructor_ {
                                                        name: Node {
                                                            start: 36,
                                                            end: 42,
                                                            line: 4,
                                                            column: 22,
                                                            value: CapitalizedIdentifier_ {
                                                                name: SymbolU32 {
                                                                    value: 4,
                                                                },
                                                            },
                                                        },
                                                        params: [],
                                                    },
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            },
                        ),
                    ),
                },
            },
        ],
    },
    [],
)
