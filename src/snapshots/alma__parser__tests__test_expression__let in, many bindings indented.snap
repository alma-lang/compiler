---
source: src/parser.rs
assertion_line: 2311
expression: "parse(\"\\\nlet\n  x = a\n    x\n b = 5\nin\nx\")"
---
Input:

let
  x = a
    x
 b = 5
in
x

Result:

Node {
    start: Idx(
        0,
    ),
    end: Idx(
        9,
    ),
    value: Expression_ {
        typ: RefCell {
            value: None,
        },
        expr: Let(
            [
                Untyped(
                    Pattern(
                        Node {
                            start: Idx(
                                1,
                            ),
                            end: Idx(
                                1,
                            ),
                            value: Identifier(
                                Node {
                                    start: Idx(
                                        1,
                                    ),
                                    end: Idx(
                                        1,
                                    ),
                                    value: Identifier_ {
                                        name: SymbolU32 {
                                            value: 1,
                                        },
                                    },
                                },
                            ),
                        },
                        Node {
                            start: Idx(
                                3,
                            ),
                            end: Idx(
                                4,
                            ),
                            value: Expression_ {
                                typ: RefCell {
                                    value: None,
                                },
                                expr: FnCall(
                                    Node {
                                        start: Idx(
                                            3,
                                        ),
                                        end: Idx(
                                            3,
                                        ),
                                        value: Expression_ {
                                            typ: RefCell {
                                                value: None,
                                            },
                                            expr: Identifier(
                                                None,
                                                Identifier(
                                                    Node {
                                                        start: Idx(
                                                            3,
                                                        ),
                                                        end: Idx(
                                                            3,
                                                        ),
                                                        value: Identifier_ {
                                                            name: SymbolU32 {
                                                                value: 2,
                                                            },
                                                        },
                                                    },
                                                ),
                                            ),
                                        },
                                    },
                                    [
                                        Node {
                                            start: Idx(
                                                4,
                                            ),
                                            end: Idx(
                                                4,
                                            ),
                                            value: Expression_ {
                                                typ: RefCell {
                                                    value: None,
                                                },
                                                expr: Identifier(
                                                    None,
                                                    Identifier(
                                                        Node {
                                                            start: Idx(
                                                                4,
                                                            ),
                                                            end: Idx(
                                                                4,
                                                            ),
                                                            value: Identifier_ {
                                                                name: SymbolU32 {
                                                                    value: 1,
                                                                },
                                                            },
                                                        },
                                                    ),
                                                ),
                                            },
                                        },
                                    ],
                                ),
                            },
                        },
                    ),
                ),
                Untyped(
                    Pattern(
                        Node {
                            start: Idx(
                                5,
                            ),
                            end: Idx(
                                5,
                            ),
                            value: Identifier(
                                Node {
                                    start: Idx(
                                        5,
                                    ),
                                    end: Idx(
                                        5,
                                    ),
                                    value: Identifier_ {
                                        name: SymbolU32 {
                                            value: 3,
                                        },
                                    },
                                },
                            ),
                        },
                        Node {
                            start: Idx(
                                7,
                            ),
                            end: Idx(
                                7,
                            ),
                            value: Expression_ {
                                typ: RefCell {
                                    value: None,
                                },
                                expr: Float(
                                    5.0,
                                ),
                            },
                        },
                    ),
                ),
            ],
            Node {
                start: Idx(
                    9,
                ),
                end: Idx(
                    9,
                ),
                value: Expression_ {
                    typ: RefCell {
                        value: None,
                    },
                    expr: Identifier(
                        None,
                        Identifier(
                            Node {
                                start: Idx(
                                    9,
                                ),
                                end: Idx(
                                    9,
                                ),
                                value: Identifier_ {
                                    name: SymbolU32 {
                                        value: 1,
                                    },
                                },
                            },
                        ),
                    ),
                },
            },
        ),
    },
}
