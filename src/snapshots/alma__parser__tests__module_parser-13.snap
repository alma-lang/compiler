---
source: src/parser.rs
expression: "parse(\"module Test exposing (a, b)\\n\\na = 1\\n\\nb = True\")"

---
Input:

module Test exposing (a, b)

a = 1

b = True

Result:

[
    Module {
        name: Node {
            start: 7,
            end: 11,
            line: 1,
            column: 7,
            value: Identifier_ {
                name: "Test",
                case: Pascal,
            },
        },
        exports: [
            Node {
                start: 22,
                end: 23,
                line: 1,
                column: 22,
                value: Identifier(
                    Node {
                        start: 22,
                        end: 23,
                        line: 1,
                        column: 22,
                        value: Identifier_ {
                            name: "a",
                            case: Camel,
                        },
                    },
                ),
            },
            Node {
                start: 25,
                end: 26,
                line: 1,
                column: 25,
                value: Identifier(
                    Node {
                        start: 25,
                        end: 26,
                        line: 1,
                        column: 25,
                        value: Identifier_ {
                            name: "b",
                            case: Camel,
                        },
                    },
                ),
            },
        ],
        imports: [],
        definitions: [
            Definition {
                lhs: Pattern(
                    Node {
                        start: 29,
                        end: 30,
                        line: 3,
                        column: 0,
                        value: Identifier(
                            Node {
                                start: 29,
                                end: 30,
                                line: 3,
                                column: 0,
                                value: Identifier_ {
                                    name: "a",
                                    case: Camel,
                                },
                            },
                        ),
                    },
                ),
                value: Node {
                    start: 33,
                    end: 34,
                    line: 3,
                    column: 4,
                    value: Expression_ {
                        typ: RefCell {
                            value: None,
                        },
                        expr: Float(
                            1.0,
                        ),
                    },
                },
            },
            Definition {
                lhs: Pattern(
                    Node {
                        start: 36,
                        end: 37,
                        line: 5,
                        column: 0,
                        value: Identifier(
                            Node {
                                start: 36,
                                end: 37,
                                line: 5,
                                column: 0,
                                value: Identifier_ {
                                    name: "b",
                                    case: Camel,
                                },
                            },
                        ),
                    },
                ),
                value: Node {
                    start: 40,
                    end: 44,
                    line: 5,
                    column: 4,
                    value: Expression_ {
                        typ: RefCell {
                            value: None,
                        },
                        expr: Bool(
                            true,
                        ),
                    },
                },
            },
        ],
    },
]
