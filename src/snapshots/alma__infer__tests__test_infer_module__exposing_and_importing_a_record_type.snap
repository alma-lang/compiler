---
source: src/infer.rs
assertion_line: 3092
expression: "infer(\"\\\nmodule Test exposing (main)\n\nimport Test.Record exposing (Record)\n\nmodule Test.Record exposing (Record)\n    alias Record a = { x : a }\n\nmain : Record Float\nmain = { x : 5 }\n\")"
---
Input:

module Test exposing (main)

import Test.Record exposing (Record)

module Test.Record exposing (Record)
    alias Record a = { x : a }

main : Record Float
main = { x : 5 }


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test

main : ∀ ∅ . Record Float (alias of { x : Float })


module Test.Record




