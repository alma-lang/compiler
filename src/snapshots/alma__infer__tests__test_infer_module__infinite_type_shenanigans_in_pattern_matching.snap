---
source: src/infer.rs
assertion_line: 3848
expression: "infer(\"\\\nmodule Test exposing (test)\n\ntype List a = Cons a (List a) | Nil\n\ntest = when Nil is\n    Cons a Nil -> a\n    Cons (Cons a Nil) Nil -> a\n    Cons (Cons (Cons a Nil) Nil) Nil -> a\n    _ -> 5\n\")"
---
Input:

module Test exposing (test)

type List a = Cons a (List a) | Nil

test = when Nil is
    Cons a Nil -> a
    Cons (Cons a Nil) Nil -> a
    Cons (Cons (Cons a Nil) Nil) Nil -> a
    _ -> 5


---
Output:

Test.alma [7:4]

Infinite type

   5│  test = when Nil is
   6│      Cons a Nil -> a
   7│      Cons (Cons a Nil) Nil -> a
    │      ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
   8│      Cons (Cons (Cons a Nil) Nil) Nil -> a
   9│      _ -> 5
