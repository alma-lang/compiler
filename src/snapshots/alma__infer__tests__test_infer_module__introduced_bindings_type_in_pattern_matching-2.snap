---
source: src/infer.rs
assertion_line: 3911
expression: "infer(\"\\\nmodule Test exposing (test)\n\ntype List a = Cons a (List a) | Nil\n\ntest = when Nil is\n    Cons a Nil |\n    Cons _ (Cons a Nil) |\n    Cons _ (Cons _ (Cons a Nil)) -> a\n    _ -> 5\n\")"
---
Input:

module Test exposing (test)

type List a = Cons a (List a) | Nil

test = when Nil is
    Cons a Nil |
    Cons _ (Cons a Nil) |
    Cons _ (Cons _ (Cons a Nil)) -> a
    _ -> 5


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test

test : ∀ ∅ . Float
