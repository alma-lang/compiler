---
source: src/parser.rs
assertion_line: 2260
expression: "parse(\"1 + 2 / 3\")"
---
Input:

1 + 2 / 3

Result:

Expression {
    span: Index(
        6,
    ),
    typ: RefCell {
        value: None,
    },
    expr: Binary {
        expression: Expression {
            span: Index(
                1,
            ),
            typ: RefCell {
                value: None,
            },
            expr: Identifier {
                module: None,
                identifier: Identifier(
                    Identifier {
                        name: SymbolU32 {
                            value: 5,
                        },
                        span: Index(
                            1,
                        ),
                    },
                ),
            },
        },
        op: Binop {
            typ: Addition,
            precedence: 14,
            associativity: Ltr,
        },
        arguments: [
            Expression {
                span: Index(
                    0,
                ),
                typ: RefCell {
                    value: None,
                },
                expr: Float(
                    1.0,
                ),
            },
            Expression {
                span: Index(
                    5,
                ),
                typ: RefCell {
                    value: None,
                },
                expr: Binary {
                    expression: Expression {
                        span: Index(
                            3,
                        ),
                        typ: RefCell {
                            value: None,
                        },
                        expr: Identifier {
                            module: None,
                            identifier: Identifier(
                                Identifier {
                                    name: SymbolU32 {
                                        value: 4,
                                    },
                                    span: Index(
                                        3,
                                    ),
                                },
                            ),
                        },
                    },
                    op: Binop {
                        typ: Division,
                        precedence: 15,
                        associativity: Ltr,
                    },
                    arguments: [
                        Expression {
                            span: Index(
                                2,
                            ),
                            typ: RefCell {
                                value: None,
                            },
                            expr: Float(
                                2.0,
                            ),
                        },
                        Expression {
                            span: Index(
                                4,
                            ),
                            typ: RefCell {
                                value: None,
                            },
                            expr: Float(
                                3.0,
                            ),
                        },
                    ],
                },
            },
        ],
    },
}
