---
source: src/parser.rs
assertion_line: 3014
expression: "parse(\"\\\nmodule Test exposing (Fruit)\n\ntype Fruit a b = { f : a -> b }\n\")"
---
Input:

module Test exposing (Fruit)

type Fruit a b = { f : a -> b }


Result:

(
    Module {
        name: ModuleName {
            parts: [
                CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 1,
                    },
                    span: Index(
                        0,
                    ),
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [
            Export {
                span: Index(
                    2,
                ),
                typ: Type {
                    name: CapitalizedIdentifier {
                        name: SymbolU32 {
                            value: 2,
                        },
                        span: Index(
                            1,
                        ),
                    },
                    constructors: [],
                },
            },
        ],
        imports: [],
        definitions: [],
        type_definitions: [
            TypeDefinition {
                span: Index(
                    10,
                ),
                name: CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 2,
                    },
                    span: Index(
                        3,
                    ),
                },
                vars: [
                    Identifier {
                        name: SymbolU32 {
                            value: 3,
                        },
                        span: Index(
                            4,
                        ),
                    },
                    Identifier {
                        name: SymbolU32 {
                            value: 4,
                        },
                        span: Index(
                            5,
                        ),
                    },
                ],
                typ: Record(
                    Record(
                        Record {
                            span: Index(
                                9,
                            ),
                            fields: [
                                (
                                    Identifier {
                                        name: SymbolU32 {
                                            value: 5,
                                        },
                                        span: Index(
                                            6,
                                        ),
                                    },
                                    Fun {
                                        params: [
                                            Var(
                                                Identifier {
                                                    name: SymbolU32 {
                                                        value: 3,
                                                    },
                                                    span: Index(
                                                        7,
                                                    ),
                                                },
                                            ),
                                        ],
                                        ret: Var(
                                            Identifier {
                                                name: SymbolU32 {
                                                    value: 4,
                                                },
                                                span: Index(
                                                    8,
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            ],
                        },
                    ),
                ),
            },
        ],
    },
    [],
)
