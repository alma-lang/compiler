---
source: src/infer.rs
assertion_line: 2911
expression: "infer(\"\\\nmodule Test exposing (main)\n\nalias Math num =\n    { add : num -> num -> num\n    , sub : num -> num -> num\n    }\n\ntype M num = M (Math num)\n\nmain = M { add: \\\\x y -> x + y, sub: \\\\x y -> x - y }\n\")"
---
Input:

module Test exposing (main)

alias Math num =
    { add : num -> num -> num
    , sub : num -> num -> num
    }

type M num = M (Math num)

main = M { add: \x y -> x + y, sub: \x y -> x - y }


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test

main : ∀ ∅ . M Float
