---
source: src/infer.rs
assertion_line: 2925
expression: "infer(\"\\\nmodule Test exposing (main)\n\nalias Math num =\n    { add : num -> num -> num\n    , sub : num -> num -> num\n    }\n\ntype M num = M (Math num)\n\nmain = M { add: \\\\x y -> x + y, sub: \\\\x -> x }\n\")"
---
Input:

module Test exposing (main)

alias Math num =
    { add : num -> num -> num
    , sub : num -> num -> num
    }

type M num = M (Math num)

main = M { add: \x y -> x + y, sub: \x -> x }


---
Output:

Test.alma [10:9]

Type mismatch:  { add : Float -> Float -> Float, sub : a -> a }  ≠  Math a (alias of { add : a -> a -> a, sub : a -> a -> a })

Expected

   8│  type M num = M (Math num)
   9│  
  10│  main = M { add: \x y -> x + y, sub: \x -> x }
    │           ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

to be

Math a (alias of { add : a -> a -> a, sub : a -> a -> a })

but seems to be

{ add : Float -> Float -> Float, sub : a -> a }
