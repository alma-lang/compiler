---
source: src/parser.rs
assertion_line: 2559
expression: "parse(\"\\\nmodule Parent\n\nmodule Parent.Test\n\n  a = 1\")"
---
Input:

module Parent

module Parent.Test

  a = 1

Result:

(
    Module {
        name: ModuleName {
            parts: [
                CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 1,
                    },
                    span: Index(
                        0,
                    ),
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [],
        imports: [],
        definitions: [],
        type_definitions: [],
    },
    [
        Module {
            name: ModuleName {
                parts: [
                    CapitalizedIdentifier {
                        name: SymbolU32 {
                            value: 1,
                        },
                        span: Index(
                            1,
                        ),
                    },
                    CapitalizedIdentifier {
                        name: SymbolU32 {
                            value: 2,
                        },
                        span: Index(
                            2,
                        ),
                    },
                ],
                full_name: SymbolU32 {
                    value: 5,
                },
            },
            exports: [],
            imports: [],
            definitions: [
                Untyped(
                    Pattern(
                        Pattern {
                            span: Index(
                                3,
                            ),
                            typ: Identifier(
                                Identifier {
                                    name: SymbolU32 {
                                        value: 3,
                                    },
                                    span: Index(
                                        3,
                                    ),
                                },
                            ),
                        },
                        Index(
                            0,
                        ),
                    ),
                ),
            ],
            type_definitions: [],
        },
    ],
)

{
    Index(
        0,
    ): Expression {
        span: Index(
            5,
        ),
        typ: RefCell {
            value: None,
        },
        expr: Float(
            1.0,
        ),
    },
}

{
    Index(
        0,
    ): Span {
        start: Index(
            1,
        ),
        end: Index(
            1,
        ),
    },
    Index(
        1,
    ): Span {
        start: Index(
            3,
        ),
        end: Index(
            3,
        ),
    },
    Index(
        2,
    ): Span {
        start: Index(
            5,
        ),
        end: Index(
            5,
        ),
    },
    Index(
        3,
    ): Span {
        start: Index(
            6,
        ),
        end: Index(
            6,
        ),
    },
    Index(
        4,
    ): Span {
        start: Index(
            6,
        ),
        end: Index(
            6,
        ),
    },
    Index(
        5,
    ): Span {
        start: Index(
            8,
        ),
        end: Index(
            8,
        ),
    },
}
