---
source: src/infer.rs
assertion_line: 2769
expression: "infer(\"\\\nmodule Test exposing (main)\n\nimport Test.Fruits as Fruits\n\nmain = Fruits.Banana\n\nmodule Test.Fruits exposing (Fruit(Banana))\n    type Fruit = Banana\n\")"
---
Input:

module Test exposing (main)

import Test.Fruits as Fruits

main = Fruits.Banana

module Test.Fruits exposing (Fruit(Banana))
    type Fruit = Banana


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test

main : ∀ ∅ . Fruit


module Test.Fruits

Banana : ∀ ∅ . Fruit


