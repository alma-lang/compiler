---
source: src/infer.rs
assertion_line: 3021
expression: "infer(\"\\\nmodule Test exposing (main)\n\nimport Test.Help exposing (test)\n\nmodule Test.Help exposing (test)\n    test : Float -> Float\n\nmain = test 5\n\")"
---
Input:

module Test exposing (main)

import Test.Help exposing (test)

module Test.Help exposing (test)
    test : Float -> Float

main = test 5


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test

main : ∀ ∅ . Float


module Test.Help

test : ∀ ∅ . Float -> Float
