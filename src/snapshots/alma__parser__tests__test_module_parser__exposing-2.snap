---
source: src/parser.rs
assertion_line: 2780
expression: "parse(\"\\\nmodule Test exposing (a, b)\n\na = 1\n\nb = True\")"
---
Input:

module Test exposing (a, b)

a = 1

b = True

Result:

(
    Module {
        name: ModuleName {
            parts: [
                CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 1,
                    },
                    span: Index(
                        0,
                    ),
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [
            Export {
                span: Index(
                    1,
                ),
                typ: Identifier(
                    Identifier {
                        name: SymbolU32 {
                            value: 2,
                        },
                        span: Index(
                            1,
                        ),
                    },
                ),
            },
            Export {
                span: Index(
                    2,
                ),
                typ: Identifier(
                    Identifier {
                        name: SymbolU32 {
                            value: 3,
                        },
                        span: Index(
                            2,
                        ),
                    },
                ),
            },
        ],
        imports: [
            Import {
                span: Index(
                    3,
                ),
                module_name: ModuleName {
                    parts: [
                        CapitalizedIdentifier {
                            name: SymbolU32 {
                                value: 6,
                            },
                            span: Index(
                                3,
                            ),
                        },
                    ],
                    full_name: SymbolU32 {
                        value: 6,
                    },
                },
                alias: None,
                exposing: [
                    Export {
                        span: Index(
                            3,
                        ),
                        typ: Type {
                            name: CapitalizedIdentifier {
                                name: SymbolU32 {
                                    value: 7,
                                },
                                span: Index(
                                    3,
                                ),
                            },
                            constructors: [],
                        },
                    },
                    Export {
                        span: Index(
                            3,
                        ),
                        typ: Type {
                            name: CapitalizedIdentifier {
                                name: SymbolU32 {
                                    value: 8,
                                },
                                span: Index(
                                    3,
                                ),
                            },
                            constructors: [],
                        },
                    },
                    Export {
                        span: Index(
                            3,
                        ),
                        typ: Type {
                            name: CapitalizedIdentifier {
                                name: SymbolU32 {
                                    value: 9,
                                },
                                span: Index(
                                    3,
                                ),
                            },
                            constructors: [
                                CapitalizedIdentifier {
                                    name: SymbolU32 {
                                        value: 5,
                                    },
                                    span: Index(
                                        3,
                                    ),
                                },
                                CapitalizedIdentifier {
                                    name: SymbolU32 {
                                        value: 10,
                                    },
                                    span: Index(
                                        3,
                                    ),
                                },
                            ],
                        },
                    },
                ],
            },
        ],
        definitions: [
            Untyped(
                Pattern(
                    Pattern {
                        span: Index(
                            4,
                        ),
                        typ: Identifier(
                            Identifier {
                                name: SymbolU32 {
                                    value: 2,
                                },
                                span: Index(
                                    4,
                                ),
                            },
                        ),
                    },
                    Index(
                        0,
                    ),
                ),
            ),
            Untyped(
                Pattern(
                    Pattern {
                        span: Index(
                            7,
                        ),
                        typ: Identifier(
                            Identifier {
                                name: SymbolU32 {
                                    value: 3,
                                },
                                span: Index(
                                    7,
                                ),
                            },
                        ),
                    },
                    Index(
                        1,
                    ),
                ),
            ),
        ],
        type_definitions: [],
        expressions: {
            Index(
                0,
            ): Expression {
                span: Index(
                    6,
                ),
                expr: Float(
                    1.0,
                ),
            },
            Index(
                1,
            ): Expression {
                span: Index(
                    10,
                ),
                expr: Identifier {
                    module: None,
                    identifier: CapitalizedIdentifier(
                        CapitalizedIdentifier {
                            name: SymbolU32 {
                                value: 5,
                            },
                            span: Index(
                                9,
                            ),
                        },
                    ),
                },
            },
        },
        expression_types: {
            Index(
                0,
            ): None,
            Index(
                1,
            ): None,
        },
    },
    [],
)

{
    Index(
        0,
    ): Span {
        start: Index(
            1,
        ),
        end: Index(
            1,
        ),
    },
    Index(
        1,
    ): Span {
        start: Index(
            4,
        ),
        end: Index(
            4,
        ),
    },
    Index(
        2,
    ): Span {
        start: Index(
            6,
        ),
        end: Index(
            6,
        ),
    },
    Index(
        3,
    ): Span {
        start: Index(
            0,
        ),
        end: Index(
            0,
        ),
    },
    Index(
        4,
    ): Span {
        start: Index(
            8,
        ),
        end: Index(
            8,
        ),
    },
    Index(
        5,
    ): Span {
        start: Index(
            8,
        ),
        end: Index(
            8,
        ),
    },
    Index(
        6,
    ): Span {
        start: Index(
            10,
        ),
        end: Index(
            10,
        ),
    },
    Index(
        7,
    ): Span {
        start: Index(
            11,
        ),
        end: Index(
            11,
        ),
    },
    Index(
        8,
    ): Span {
        start: Index(
            11,
        ),
        end: Index(
            11,
        ),
    },
    Index(
        9,
    ): Span {
        start: Index(
            13,
        ),
        end: Index(
            13,
        ),
    },
    Index(
        10,
    ): Span {
        start: Index(
            13,
        ),
        end: Index(
            13,
        ),
    },
}
