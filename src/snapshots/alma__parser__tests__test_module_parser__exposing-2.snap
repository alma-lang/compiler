---
source: src/parser.rs
assertion_line: 2394
expression: "parse(\"\\\nmodule Test exposing (a, b)\n\na = 1\n\nb = True\")"

---
Input:

module Test exposing (a, b)

a = 1

b = True

Result:

(
    Module {
        name: ModuleName {
            parts: [
                Node {
                    start: 7,
                    end: 11,
                    line: 1,
                    column: 7,
                    value: CapitalizedIdentifier_ {
                        name: SymbolU32 {
                            value: 1,
                        },
                    },
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [
            Node {
                start: 22,
                end: 23,
                line: 1,
                column: 22,
                value: Identifier(
                    Node {
                        start: 22,
                        end: 23,
                        line: 1,
                        column: 22,
                        value: Identifier_ {
                            name: SymbolU32 {
                                value: 2,
                            },
                        },
                    },
                ),
            },
            Node {
                start: 25,
                end: 26,
                line: 1,
                column: 25,
                value: Identifier(
                    Node {
                        start: 25,
                        end: 26,
                        line: 1,
                        column: 25,
                        value: Identifier_ {
                            name: SymbolU32 {
                                value: 3,
                            },
                        },
                    },
                ),
            },
        ],
        imports: [],
        definitions: [
            Untyped(
                Pattern(
                    Node {
                        start: 29,
                        end: 30,
                        line: 3,
                        column: 0,
                        value: Identifier(
                            Node {
                                start: 29,
                                end: 30,
                                line: 3,
                                column: 0,
                                value: Identifier_ {
                                    name: SymbolU32 {
                                        value: 2,
                                    },
                                },
                            },
                        ),
                    },
                    Node {
                        start: 33,
                        end: 34,
                        line: 3,
                        column: 4,
                        value: Expression_ {
                            typ: RefCell {
                                value: None,
                            },
                            expr: Float(
                                1.0,
                            ),
                        },
                    },
                ),
            ),
            Untyped(
                Pattern(
                    Node {
                        start: 36,
                        end: 37,
                        line: 5,
                        column: 0,
                        value: Identifier(
                            Node {
                                start: 36,
                                end: 37,
                                line: 5,
                                column: 0,
                                value: Identifier_ {
                                    name: SymbolU32 {
                                        value: 3,
                                    },
                                },
                            },
                        ),
                    },
                    Node {
                        start: 40,
                        end: 44,
                        line: 5,
                        column: 4,
                        value: Expression_ {
                            typ: RefCell {
                                value: None,
                            },
                            expr: Bool(
                                true,
                            ),
                        },
                    },
                ),
            ),
        ],
        type_definitions: [],
    },
    [],
)
