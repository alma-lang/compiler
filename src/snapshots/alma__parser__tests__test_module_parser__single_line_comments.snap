---
source: src/parser.rs
assertion_line: 3537
expression: "parse(\"\\\n-- Comment\nmodule Test\n    -- Comment\n    exposing (\n    -- Comment\n    main)\n\n-- Comment\nimport Test.Fruits exposing (Fruit(Banana))\n\n-- Comment\nmain =\n-- Comment\n    1\n\n-- Comment\nmodule Test.Fruits\n    -- Comment\n    exposing (Fruit(Banana))\n    -- Comment\n    type Fruit =\n        -- Comment\n        Banana\n\")"
---
Input:

-- Comment
module Test
    -- Comment
    exposing (
    -- Comment
    main)

-- Comment
import Test.Fruits exposing (Fruit(Banana))

-- Comment
main =
-- Comment
    1

-- Comment
module Test.Fruits
    -- Comment
    exposing (Fruit(Banana))
    -- Comment
    type Fruit =
        -- Comment
        Banana


Result:

module Test
    exports:
        main 72:76 72:76
    imports:
        Alma 0:10
            Float 0:10 0:10
            String 0:10 0:10
            Bool 0:10 (True 0:10, False 0:10) 0:10
        Test.Fruits 90:133
            Fruit 119:124 (Banana 125:131) 119:132
    type_definitions:

    definitions:
        Untyped
            pattern:
                Identifier main 146:150 146:150
            expr:
                Float 1 168:169


module Test.Fruits
    exports:
        Fruit 230:235 (Banana 236:242) 230:243
    imports:
        Alma 0:10
            Float 0:10 0:10
            String 0:10 0:10
            Bool 0:10 (True 0:10, False 0:10) 0:10
    type_definitions:
        Fruit 269:274
            Banana 304:310 304:310
    definitions:


