---
source: src/parser.rs
assertion_line: 3004
expression: "parse(\"\\\n-- Comment\nmodule Test\n    -- Comment\n    exposing (\n    -- Comment\n    main)\n\n-- Comment\nimport Test.Fruits exposing (Fruit(Banana))\n\n-- Comment\nmain =\n-- Comment\n    1\n\n-- Comment\nmodule Test.Fruits\n    -- Comment\n    exposing (Fruit(Banana))\n    -- Comment\n    type Fruit =\n        -- Comment\n        Banana\n\")"
---
Input:

-- Comment
module Test
    -- Comment
    exposing (
    -- Comment
    main)

-- Comment
import Test.Fruits exposing (Fruit(Banana))

-- Comment
main =
-- Comment
    1

-- Comment
module Test.Fruits
    -- Comment
    exposing (Fruit(Banana))
    -- Comment
    type Fruit =
        -- Comment
        Banana


Result:

(
    Module {
        name: ModuleName {
            parts: [
                CapitalizedIdentifier {
                    name: SymbolU32 {
                        value: 1,
                    },
                    span: Index(
                        0,
                    ),
                },
            ],
            full_name: SymbolU32 {
                value: 1,
            },
        },
        exports: [
            Export {
                span: Index(
                    1,
                ),
                typ: Identifier(
                    Identifier {
                        name: SymbolU32 {
                            value: 2,
                        },
                        span: Index(
                            1,
                        ),
                    },
                ),
            },
        ],
        imports: [
            Import {
                span: Index(
                    7,
                ),
                module_name: ModuleName {
                    parts: [
                        CapitalizedIdentifier {
                            name: SymbolU32 {
                                value: 1,
                            },
                            span: Index(
                                2,
                            ),
                        },
                        CapitalizedIdentifier {
                            name: SymbolU32 {
                                value: 3,
                            },
                            span: Index(
                                3,
                            ),
                        },
                    ],
                    full_name: SymbolU32 {
                        value: 7,
                    },
                },
                alias: None,
                exposing: [
                    Export {
                        span: Index(
                            6,
                        ),
                        typ: Type {
                            name: CapitalizedIdentifier {
                                name: SymbolU32 {
                                    value: 4,
                                },
                                span: Index(
                                    4,
                                ),
                            },
                            constructors: [
                                CapitalizedIdentifier {
                                    name: SymbolU32 {
                                        value: 5,
                                    },
                                    span: Index(
                                        5,
                                    ),
                                },
                            ],
                        },
                    },
                ],
            },
        ],
        definitions: [
            Untyped(
                Pattern(
                    Pattern {
                        span: Index(
                            8,
                        ),
                        typ: Identifier(
                            Identifier {
                                name: SymbolU32 {
                                    value: 2,
                                },
                                span: Index(
                                    8,
                                ),
                            },
                        ),
                    },
                    Index(
                        0,
                    ),
                ),
            ),
        ],
        type_definitions: [],
    },
    [
        Module {
            name: ModuleName {
                parts: [
                    CapitalizedIdentifier {
                        name: SymbolU32 {
                            value: 1,
                        },
                        span: Index(
                            11,
                        ),
                    },
                    CapitalizedIdentifier {
                        name: SymbolU32 {
                            value: 3,
                        },
                        span: Index(
                            12,
                        ),
                    },
                ],
                full_name: SymbolU32 {
                    value: 7,
                },
            },
            exports: [
                Export {
                    span: Index(
                        15,
                    ),
                    typ: Type {
                        name: CapitalizedIdentifier {
                            name: SymbolU32 {
                                value: 4,
                            },
                            span: Index(
                                13,
                            ),
                        },
                        constructors: [
                            CapitalizedIdentifier {
                                name: SymbolU32 {
                                    value: 5,
                                },
                                span: Index(
                                    14,
                                ),
                            },
                        ],
                    },
                },
            ],
            imports: [],
            definitions: [],
            type_definitions: [
                TypeDefinition {
                    span: Index(
                        19,
                    ),
                    name: CapitalizedIdentifier {
                        name: SymbolU32 {
                            value: 4,
                        },
                        span: Index(
                            16,
                        ),
                    },
                    vars: [],
                    typ: Union {
                        constructors: [
                            Constructor {
                                span: Index(
                                    18,
                                ),
                                name: CapitalizedIdentifier {
                                    name: SymbolU32 {
                                        value: 5,
                                    },
                                    span: Index(
                                        17,
                                    ),
                                },
                                params: [],
                            },
                        ],
                    },
                },
            ],
        },
    ],
)

{
    Index(
        0,
    ): Expression {
        span: Index(
            10,
        ),
        typ: RefCell {
            value: None,
        },
        expr: Float(
            1.0,
        ),
    },
}

{
    Index(
        0,
    ): Span {
        start: Index(
            2,
        ),
        end: Index(
            2,
        ),
    },
    Index(
        1,
    ): Span {
        start: Index(
            7,
        ),
        end: Index(
            7,
        ),
    },
    Index(
        2,
    ): Span {
        start: Index(
            11,
        ),
        end: Index(
            11,
        ),
    },
    Index(
        3,
    ): Span {
        start: Index(
            13,
        ),
        end: Index(
            13,
        ),
    },
    Index(
        4,
    ): Span {
        start: Index(
            16,
        ),
        end: Index(
            16,
        ),
    },
    Index(
        5,
    ): Span {
        start: Index(
            18,
        ),
        end: Index(
            18,
        ),
    },
    Index(
        6,
    ): Span {
        start: Index(
            16,
        ),
        end: Index(
            19,
        ),
    },
    Index(
        7,
    ): Span {
        start: Index(
            10,
        ),
        end: Index(
            20,
        ),
    },
    Index(
        8,
    ): Span {
        start: Index(
            22,
        ),
        end: Index(
            22,
        ),
    },
    Index(
        9,
    ): Span {
        start: Index(
            22,
        ),
        end: Index(
            22,
        ),
    },
    Index(
        10,
    ): Span {
        start: Index(
            25,
        ),
        end: Index(
            25,
        ),
    },
    Index(
        11,
    ): Span {
        start: Index(
            28,
        ),
        end: Index(
            28,
        ),
    },
    Index(
        12,
    ): Span {
        start: Index(
            30,
        ),
        end: Index(
            30,
        ),
    },
    Index(
        13,
    ): Span {
        start: Index(
            34,
        ),
        end: Index(
            34,
        ),
    },
    Index(
        14,
    ): Span {
        start: Index(
            36,
        ),
        end: Index(
            36,
        ),
    },
    Index(
        15,
    ): Span {
        start: Index(
            34,
        ),
        end: Index(
            37,
        ),
    },
    Index(
        16,
    ): Span {
        start: Index(
            41,
        ),
        end: Index(
            41,
        ),
    },
    Index(
        17,
    ): Span {
        start: Index(
            44,
        ),
        end: Index(
            44,
        ),
    },
    Index(
        18,
    ): Span {
        start: Index(
            44,
        ),
        end: Index(
            44,
        ),
    },
    Index(
        19,
    ): Span {
        start: Index(
            40,
        ),
        end: Index(
            44,
        ),
    },
}
