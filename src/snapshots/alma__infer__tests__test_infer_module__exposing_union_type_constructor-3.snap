---
source: src/infer.rs
assertion_line: 2707
expression: "infer(\"\\\nmodule Test exposing (main)\n\nimport Test.Fruits\n\nmain = Test.Fruits.test\n\nmodule Test.Fruits exposing (test, Fruit(Banana))\n    type Fruit = Banana\n\n    test = 1\n\")"
---
Input:

module Test exposing (main)

import Test.Fruits

main = Test.Fruits.test

module Test.Fruits exposing (test, Fruit(Banana))
    type Fruit = Banana

    test = 1


---
Output:

module Alma



False : ∀ ∅ . Bool

True : ∀ ∅ . Bool



add : ∀ ∅ . Float -> Float -> Float

and_ : ∀ ∅ . Bool -> Bool -> Bool

div : ∀ ∅ . Float -> Float -> Float

eq : ∀ a . a -> a -> Bool

ge : ∀ ∅ . Float -> Float -> Bool

gt : ∀ ∅ . Float -> Float -> Bool

le : ∀ ∅ . Float -> Float -> Bool

lt : ∀ ∅ . Float -> Float -> Bool

mult : ∀ ∅ . Float -> Float -> Float

ne : ∀ a . a -> a -> Bool

or_ : ∀ ∅ . Bool -> Bool -> Bool

sub : ∀ ∅ . Float -> Float -> Float


module Test

main : ∀ ∅ . Float


module Test.Fruits

Banana : ∀ ∅ . Fruit

test : ∀ ∅ . Float
