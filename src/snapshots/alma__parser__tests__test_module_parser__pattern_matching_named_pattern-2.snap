---
source: src/parser.rs
assertion_line: 3929
expression: "parse(\"\\\nmodule Test\n\ntest = when test is\n    Banana as hello -> True\n    Banana asdf as hello-> True\n    Banana (asdf as hello) -> True\n\")"
---
Input:

module Test

test = when test is
    Banana as hello -> True
    Banana asdf as hello-> True
    Banana (asdf as hello) -> True


Result:

module Test
    exports:

    imports:
        Alma 0:6
            Float 0:6 0:6
            String 0:6 0:6
            Bool 0:6 (True 0:6, False 0:6) 0:6
    type_definitions:

    definitions:
        Untyped
            pattern:
                Identifier test 13:17 13:17
            expr:
                PatternMatching 20:127
                    condition:
                        Identifier test 25:29 25:29
                    PatternMatchingBranch 37:60
                        pattern:
                            Named: hello 47:52 37:52
                                Banana 37:43 37:43
                        body:
                            Identifier True 56:60 56:60
                    PatternMatchingBranch 65:92
                        pattern:
                            Named: hello 80:85 65:85
                                Banana 65:71 65:76
                                    Identifier asdf 72:76 72:76
                        body:
                            Identifier True 88:92 88:92
                    PatternMatchingBranch 97:127
                        pattern:
                            Banana 97:103 97:118
                                Named: hello 113:118 105:118
                                    Identifier asdf 105:109 105:109
                        body:
                            Identifier True 123:127 123:127



