---
source: src/parser.rs
expression: "parse(\"1 + 2 / 3\")"

---
Input:

1 + 2 / 3

Result:

Node {
    start: 0,
    end: 9,
    line: 1,
    column: 0,
    value: Expression_ {
        typ: RefCell {
            value: None,
        },
        expr: Binary(
            Node {
                start: 2,
                end: 3,
                line: 1,
                column: 2,
                value: Expression_ {
                    typ: RefCell {
                        value: None,
                    },
                    expr: Identifier(
                        Node {
                            start: 2,
                            end: 3,
                            line: 1,
                            column: 2,
                            value: Identifier_ {
                                name: "__op__add",
                                case: Camel,
                            },
                        },
                    ),
                },
            },
            Node {
                start: 2,
                end: 3,
                line: 1,
                column: 2,
                value: Binop_ {
                    typ: Addition,
                    precedence: 14,
                    associativity: Ltr,
                    fn_: Identifier_ {
                        name: "__op__add",
                        case: Camel,
                    },
                },
            },
            [
                Node {
                    start: 0,
                    end: 1,
                    line: 1,
                    column: 0,
                    value: Expression_ {
                        typ: RefCell {
                            value: None,
                        },
                        expr: Float(
                            1.0,
                        ),
                    },
                },
                Node {
                    start: 4,
                    end: 9,
                    line: 1,
                    column: 4,
                    value: Expression_ {
                        typ: RefCell {
                            value: None,
                        },
                        expr: Binary(
                            Node {
                                start: 6,
                                end: 7,
                                line: 1,
                                column: 6,
                                value: Expression_ {
                                    typ: RefCell {
                                        value: None,
                                    },
                                    expr: Identifier(
                                        Node {
                                            start: 6,
                                            end: 7,
                                            line: 1,
                                            column: 6,
                                            value: Identifier_ {
                                                name: "__op__div",
                                                case: Camel,
                                            },
                                        },
                                    ),
                                },
                            },
                            Node {
                                start: 6,
                                end: 7,
                                line: 1,
                                column: 6,
                                value: Binop_ {
                                    typ: Division,
                                    precedence: 15,
                                    associativity: Ltr,
                                    fn_: Identifier_ {
                                        name: "__op__div",
                                        case: Camel,
                                    },
                                },
                            },
                            [
                                Node {
                                    start: 4,
                                    end: 5,
                                    line: 1,
                                    column: 4,
                                    value: Expression_ {
                                        typ: RefCell {
                                            value: None,
                                        },
                                        expr: Float(
                                            2.0,
                                        ),
                                    },
                                },
                                Node {
                                    start: 8,
                                    end: 9,
                                    line: 1,
                                    column: 8,
                                    value: Expression_ {
                                        typ: RefCell {
                                            value: None,
                                        },
                                        expr: Float(
                                            3.0,
                                        ),
                                    },
                                },
                            ],
                        ),
                    },
                },
            ],
        ),
    },
}
